insert into
    ADM."HOUSEHOLD"(
        primary_bbcrm_constituent_id,
        primary_constituent_id,
        sas_datahub_id,
        household_id,
        bbcrm_household_id,
        hpg_12m_amt,
        hpg_12m_date,
        hpg_12m_revcat,
        hpg_18m_amt,
        hpg_18m_date,
        hpg_18m_revcat,
        hpg_24m_amt,
        hpg_24m_date,
        hpg_24m_revcat,
        hpg_36m_amt,
        hpg_36m_date,
        hpg_36m_revcat,
        hpg_all_amt,
        hpg_all_date,
        hpg_all_revcat,
        mrg_amt,
        mrg_date,
        months_as_new_cnt,
        months_until_renew_cnt,
        months_until_renewal,
        membership_expiration_date,
        years_on_file_cnt,
        deceased_flg,
        donor_flg,
        bankofamerica_flg,
        bod_active_flg,
        bod_former_flg,
        bot_active_flg,
        bot_former_flg,
        canadian_flg,
        cp_flg,
        lgps_flg,
        life_member_flg,
        managed_flg,
        major_donor_managed_flg,
        middle_donor_managed_flg,
        ng_flg,
        no_appeal_flg,
        no_appeal_wo_flg,
        no_trip_invitation_flg,
        no_event_invitation_flg,
        one_appeal_flg,
        one_renew_flg,
        organization_flg,
        sustainer_flg,
        sustainer_prior_flg,
        ceovip_flg,
        withhold_flg,
        workplace_donor_flg,
        address_line_1,
        address_line_2,
        city,
        state_code,
        state_name,
        zip_code,
        country_name,
        effective_from,
        effective_to,
        monthly_sustainer_flg,
        no_renewals_flg,
        dms_sustainer_flg,
        legacy_flg,
        first_gift_date,
        propensity1k_flg,
        propensity10k_flg
    ) (
        select
            stg.primary_bbcrm_constituent_id,
            stg.primary_constituent_id,
            stg.sas_datahub_id,
            stg.household_id,
            stg.bbcrm_household_id,
            stg.hpg_12m_amt,
            stg.hpg_12m_date,
            stg.hpg_12m_revcat,
            stg.hpg_18m_amt,
            stg.hpg_18m_date,
            stg.hpg_18m_revcat,
            stg.hpg_24m_amt,
            stg.hpg_24m_date,
            stg.hpg_24m_revcat,
            stg.hpg_36m_amt,
            stg.hpg_36m_date,
            stg.hpg_36m_revcat,
            stg.hpg_all_amt,
            stg.hpg_all_date,
            stg.hpg_all_revcat,
            stg.mrg_amt,
            stg.mrg_date,
            stg.months_as_new_cnt,
            stg.months_until_renew_cnt,
            stg.months_until_renewal,
            stg.membership_expiration_date,
            stg.years_on_file_cnt,
            stg.deceased_flg,
            stg.donor_flg,
            stg.bankofamerica_flg,
            stg.bod_active_flg,
            stg.bod_former_flg,
            stg.bot_active_flg,
            stg.bot_former_flg,
            stg.canadian_flg,
            stg.cp_flg,
            stg.lgps_flg,
            stg.life_member_flg,
            stg.managed_flg,
            stg.major_donor_managed_flg,
            stg.middle_donor_managed_flg,
            stg.ng_flg,
            stg.no_appeal_flg,
            stg.no_appeal_wo_flg,
            stg.no_trip_invitation_flg,
            stg.no_event_invitation_flg,
            stg.one_appeal_flg,
            stg.one_renew_flg,
            stg.organization_flg,
            stg.sustainer_flg,
            stg.sustainer_prior_flg,
            stg.ceovip_flg,
            stg.withhold_flg,
            stg.workplace_donor_flg,
            stg.address_line_1,
            stg.address_line_2,
            stg.city,
            stg.state_code,
            stg.state_name,
            stg.zip_code,
            stg.country_name,
            '2020-08-26 14:59:06' as effective_from,
            stg.effective_to,
            stg.monthly_sustainer_flg,
            stg.no_renewals_flg,
            stg.dms_sustainer_flg,
            stg.legacy_flg,
            stg.first_gift_date,
            stg.propensity1k_flg,
            stg.propensity10k_flg
        from
            redwork.stg_household as stg
        where
            stg.dml_type in ('I', 'U')
    )